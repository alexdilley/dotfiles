source ~/.vim/packages.vim

" hide buffers without prompt
set hidden

" limit maximum column to search for syntax items
set synmaxcol=120

" use two spaces for tabs
set ts=2 sts=2 sw=2 expandtab

" line numbers
set number
set relativenumber

" highlight current line
set cursorline

" highlight matching bracket
set showmatch

" show invisibles
set list
set listchars=tab:▸\ ,eol:¬,trail:·

" search downwards in the project directory
set path+=**
" highlight previous search matches
set hlsearch
" ignore case in pattern
set ignorecase
" ...if pattern contains only lowercase letters
set smartcase

" <leader> key map
let mapleader=','

" Emacs bindings
imap <C-d> <Del>

" window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

if has('autocmd')
  " highlight characters beyond column 80
  augroup vimrc_autocmds
    autocmd BufEnter * highlight OverLength ctermbg=red ctermfg=white
    autocmd BufEnter,WinEnter * match OverLength /\%>80v.\+/
  augroup END
endif

" vim-airline statusline
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#left_sep=' '
let g:airline#extensions#tabline#left_alt_sep='|'
let g:airline#extensions#tabline#show_buffers=0
let g:airline_powerline_fonts=1
" remove erroneous symbol at end of statusline
let g:airline_skip_empty_sections=1
" angled separators render poorly in console
let g:airline_left_sep=''
let g:airline_right_sep=''

" CtrlP fuzzy file finder
if executable('rg')
  " use ripgrep over grep
  set grepprg=rg\ --color=never
  " rg respects .gitignore
  let g:ctrlp_user_command='rg %s --files --color=never --hidden --glob "!.git/*"'
  " rg is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching=0
else
  " search only files un/tracked by Git
  let g:ctrlp_user_command=['.git', 'git --git-dir=%s/.git ls-files -co --exclude-standard']
endif

" Gundo.vim
nnoremap <F5> :GundoToggle<CR>

" Ale
let g:ale_lint_on_text_changed='never'
let g:airline#extensions#ale#enabled=1
